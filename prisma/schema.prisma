// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Branch {
CSE
ECE
ME
CE
AIDS
EEE
CSAI
CY
}

enum Quota {
  NRI
  CIWG
  OCI
  PIO
}

enum Program {
  BTech
  MCA
  MTech
}

type Tenth {
  schoolName String
  board      String
  markList   String
}

type Twelfth {
  schoolName String
  board      String
  markList   String
}

type Keam {
  year       Int
  rollNumber Int
  rank       Int
  paper1Mark Int
  paper2Mark Int
  totalScore Int
  markList   String
}

type Education {
  tenth   Tenth
  twelfth Twelfth
  keam    Keam
}

type Declaration {
  branch            Branch
  signature         String
  signatureGuardian String
}

type Payment {
  transactionNumber Int
  transactionSlip   String
}

type UserAddress {
  houseName String
  state     String
  district  String
  pincode   Int
  city      String
}

type ParentDetails {
  guardian   String
  occupation String
  sponsor    String
  relation   String
}

model User {
  id                 String         @id @default(auto()) @map("_id") @db.ObjectId
  firstName          String
  middleName         String?
  lastName           String
  email              String         @unique
  password           String?        @unique
  mobileNumber       String         @unique
  keralaMobileNumber String?
  gender             String
  quota              Quota
  program            Program
  applyingYear       String
  aadharNo           Int            @unique
  dob                DateTime
  photo              String?
  religion           String
  cast               String
  contactAddress     UserAddress?
  permanentAddress   UserAddress?
  parentDetails      ParentDetails?
  education          Education?
  declaration        Declaration?
  payment            Payment?
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  seatConfirmed      Boolean        @default(false) // Indicates if the seat is confirmed
  applicationNo      String         @unique // <<== NEW CUSTOM ID FIELD
  canOnboard         Boolean        @default(false) // Requires admin approval to onboard
}

model Branches {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  totalSets     Int      @default(18) // Default total sets for each branch
  superSeats    Int      @default(9) // Initially no super sets
  nriSeats      Int      @default(9) // Initially no NRI seats
  mngtSeats     Int      @default(0) // Initially no management seats
  occupiedSets  Int      @default(0) // Initially no sets are occupied
  occupiedNri   Int      @default(0) // Initially no NRI seats are occupied
  occupiedMngt  Int      @default(0) // Initially no management seats are occupied
  occupiedSuper Int      @default(0) // Initially no super seats are occupied
  nri           Int      @default(0) // Count of NRI seats
  oci           Int      @default(0) // Count of OCI seats
  cwig          Int      @default(0) // Count of CWIG seats
  nriStudents   String[] // List of NRI students
  ociStudents   String[] // List of OCI students
  cwigStudents  String[] // List of CWIG students
  year          Int // Year for which the data is applicable
  waitingList   Int      @default(0) // Count of students on the waiting list

  @@unique([name, year])
}

model Admin {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  adminName String
  email     String @unique
  password  String
}

// Add to prisma/schema.prisma
model PasswordReset {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime
  used      Boolean  @default(false)

  @@index([email])
}
